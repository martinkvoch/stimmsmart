<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="curLang" xml:space="preserve">
    <value>Current language: {0}</value>
  </data>
  <data name="exitMsg" xml:space="preserve">
    <value>Application exits.</value>
  </data>
  <data name="exitQ" xml:space="preserve">
    <value>Do you really want to exit the application?</value>
  </data>
  <data name="exitQH" xml:space="preserve">
    <value>Application exit</value>
  </data>
  <data name="finish" xml:space="preserve">
    <value>Completion of initialization.</value>
  </data>
  <data name="LogHdrDate" xml:space="preserve">
    <value>Date &amp; Time</value>
  </data>
  <data name="LogHdrRecord" xml:space="preserve">
    <value>Record</value>
  </data>
  <data name="LogHdrSender" xml:space="preserve">
    <value>Sender</value>
  </data>
  <data name="LogHdrType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="numberOfChannels" xml:space="preserve">
    <value>Number of channels: {0}</value>
  </data>
  <data name="pressEscButton" xml:space="preserve">
    <value>Press ESC key or button "X" on the end of this bar</value>
  </data>
  <data name="restartMsg" xml:space="preserve">
    <value>Application and device are restarted.</value>
  </data>
  <data name="restartQ" xml:space="preserve">
    <value>Do you really want to restart device?</value>
  </data>
  <data name="restartQH" xml:space="preserve">
    <value>Device restart</value>
  </data>
  <data name="shutdownMsg" xml:space="preserve">
    <value>Application and device are switched off.</value>
  </data>
  <data name="shutdownQ" xml:space="preserve">
    <value>Do you really want to shutdown the device?</value>
  </data>
  <data name="shutdownQH" xml:space="preserve">
    <value>Device shutdown</value>
  </data>
  <data name="startInitMsg" xml:space="preserve">
    <value>{0} inicialization started.</value>
  </data>
  <data name="startMsg" xml:space="preserve">
    <value>{0} started...</value>
  </data>
  <data name="startup" xml:space="preserve">
    <value>Inicialization of startup...</value>
  </data>
  <data name="testChannel" xml:space="preserve">
    <value>Self-test in progress...</value>
  </data>
  <data name="testDongle" xml:space="preserve">
    <value>Authentication dongle...</value>
  </data>
  <data name="newDataQ" xml:space="preserve">
    <value>You are going to create a new database, the old one will be removed. Do you really want to do this?</value>
  </data>
  <data name="newDataQH" xml:space="preserve">
    <value>New database</value>
  </data>
  <data name="bckDataH" xml:space="preserve">
    <value>Backup copy of database</value>
  </data>
  <data name="bckDataKO" xml:space="preserve">
    <value>Creating a backup copy of database failed.</value>
  </data>
  <data name="newDataKO" xml:space="preserve">
    <value>Creating a new database failed.</value>
  </data>
  <data name="newDataOK" xml:space="preserve">
    <value>New database was created.</value>
  </data>
  <data name="bckDataOK" xml:space="preserve">
    <value>Backup copy of database was created at {0}.</value>
  </data>
  <data name="errExecCmd" xml:space="preserve">
    <value>Error {0} while executing {1}</value>
  </data>
  <data name="LogError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="LogInfo" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="LogWarn" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="startMsg1" xml:space="preserve">
    <value>{0} is running.</value>
  </data>
  <data name="noBacksAvail" xml:space="preserve">
    <value>No backup available.</value>
  </data>
  <data name="restoreKO" xml:space="preserve">
    <value>Restore the database was not successful.</value>
  </data>
  <data name="restoreOK" xml:space="preserve">
    <value>The database was restored from backup at {0}</value>
  </data>
  <data name="restoreQ" xml:space="preserve">
    <value>Do you really want to restore database from previous backup?</value>
  </data>
  <data name="restoreQH" xml:space="preserve">
    <value>Restoring the database</value>
  </data>
  <data name="dbIsClosed" xml:space="preserve">
    <value>The database is closed.</value>
  </data>
  <data name="dbIsOpen" xml:space="preserve">
    <value>The database is open.</value>
  </data>
  <data name="UserHdrLang" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="UserHdrLogin" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="UserHdrName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="UserHdrRole" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="UserRoleAdmin" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="UserRoleUser" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserEditHdr" xml:space="preserve">
    <value>Edit user</value>
  </data>
  <data name="UserNewHdr" xml:space="preserve">
    <value>New user</value>
  </data>
  <data name="UserNewMsg" xml:space="preserve">
    <value>New user "{0}" was created.</value>
  </data>
  <data name="curLang1" xml:space="preserve">
    <value>Current</value>
  </data>
  <data name="delNRows" xml:space="preserve">
    <value>{0} rows was deleted from table {1}.</value>
  </data>
  <data name="vacuumMsg" xml:space="preserve">
    <value>Database compression performed.</value>
  </data>
  <data name="delAllMsg" xml:space="preserve">
    <value>Table "{0}" was truncated.</value>
  </data>
  <data name="delAllQ" xml:space="preserve">
    <value>You are about to delete the entire content of table "{0}" to all data will be lost from the table. Do you really want to do?</value>
  </data>
  <data name="delAllQH" xml:space="preserve">
    <value>Truncating the table</value>
  </data>
  <data name="UserEditMsg" xml:space="preserve">
    <value>User "{0}" was updated.</value>
  </data>
  <data name="pswMatchMsg" xml:space="preserve">
    <value>Passwords match</value>
  </data>
  <data name="pswNotMatchMsg" xml:space="preserve">
    <value>* Passwords do not match *</value>
  </data>
  <data name="signedOutMsg" xml:space="preserve">
    <value>Signed out</value>
  </data>
  <data name="signedInUser" xml:space="preserve">
    <value>User {0} has signed in</value>
  </data>
  <data name="signedNotMsg" xml:space="preserve">
    <value>Not logged in</value>
  </data>
  <data name="signedOutUser" xml:space="preserve">
    <value>User {0} has signed out</value>
  </data>
  <data name="signedUnsuccessful" xml:space="preserve">
    <value>User login {0} failed</value>
  </data>
  <data name="dgEndocrinology" xml:space="preserve">
    <value>Endocrinology</value>
  </data>
  <data name="dgMicrocirculation" xml:space="preserve">
    <value>Microcirculation</value>
  </data>
  <data name="dgCLesions" xml:space="preserve">
    <value>Chronic lesions</value>
  </data>
  <data name="dgCPain" xml:space="preserve">
    <value>Chronic pain (non-oncogenic)</value>
  </data>
  <data name="dgDPNP" xml:space="preserve">
    <value>Diabetic polyneuropathy</value>
  </data>
  <data name="dgEDis" xml:space="preserve">
    <value>Erectile disorders</value>
  </data>
  <data name="langChanged" xml:space="preserve">
    <value>The language has been changed to {0}</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Stimsmart</value>
  </data>
  <data name="HICEditHdr" xml:space="preserve">
    <value>Edit Health Insurance Company</value>
  </data>
  <data name="HICEditMsg" xml:space="preserve">
    <value>HIC "{0}" was updated.</value>
  </data>
  <data name="HICHdrCode" xml:space="preserve">
    <value>Code of HIC</value>
  </data>
  <data name="HICHdrName" xml:space="preserve">
    <value>Name of the health insurance company</value>
  </data>
  <data name="HICNewHdr" xml:space="preserve">
    <value>New Health Insurance Company</value>
  </data>
  <data name="HICNewMsg" xml:space="preserve">
    <value>New HIC "{0}" was created.</value>
  </data>
  <data name="PatHdrAddr" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="PatHdrBirthDate" xml:space="preserve">
    <value>Birth Day</value>
  </data>
  <data name="PatHdrCity" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="PatHdrCountry" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="PatHdrDg" xml:space="preserve">
    <value>Diagnosis</value>
  </data>
  <data name="PatHdrFName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="PatHdrHIC" xml:space="preserve">
    <value>Health Insurance Company</value>
  </data>
  <data name="PatHdrLName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="PatHdrMedRec" xml:space="preserve">
    <value>Medical Record</value>
  </data>
  <data name="PatHdrMName" xml:space="preserve">
    <value>Middle Name</value>
  </data>
  <data name="PatHdrNote" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="PatHdrPhone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="PatHdrSex" xml:space="preserve">
    <value>Sex</value>
  </data>
  <data name="PatHdrZip" xml:space="preserve">
    <value>Zipcode</value>
  </data>
  <data name="PatSexFemale" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="PatSexMale" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="dgNotSelected" xml:space="preserve">
    <value>The diagnosis has not been selected</value>
  </data>
  <data name="PatEditHdr" xml:space="preserve">
    <value>Edit Patient</value>
  </data>
  <data name="PatNewHdr" xml:space="preserve">
    <value>New Patient</value>
  </data>
  <data name="PatNewMsg" xml:space="preserve">
    <value>New patient "{0}" was created.</value>
  </data>
  <data name="PatEditMsg" xml:space="preserve">
    <value>Patient "{0}" was updated.</value>
  </data>
  <data name="PatHdrSomTyp" xml:space="preserve">
    <value>Somatotype</value>
  </data>
  <data name="PatSomTypHyperergic" xml:space="preserve">
    <value>Hyperergic</value>
  </data>
  <data name="PatSomTypHypotype" xml:space="preserve">
    <value>Hypotype</value>
  </data>
  <data name="PatSomTypNormotype" xml:space="preserve">
    <value>Normotype</value>
  </data>
  <data name="chActive" xml:space="preserve">
    <value>Connect the electrodes</value>
  </data>
  <data name="chDisconected" xml:space="preserve">
    <value>Channel disconnected</value>
  </data>
  <data name="chError" xml:space="preserve">
    <value>An error occurred</value>
  </data>
  <data name="chInactive" xml:space="preserve">
    <value>Channel inactive</value>
  </data>
  <data name="chInProgress" xml:space="preserve">
    <value>The procedure is performed...</value>
  </data>
  <data name="chPaused" xml:space="preserve">
    <value>The procedure is suspended</value>
  </data>
  <data name="chReady" xml:space="preserve">
    <value>Channel ready</value>
  </data>
  <data name="chRestored" xml:space="preserve">
    <value>The procedure is restored...</value>
  </data>
  <data name="patSelName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="patSelNumber" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="patSelYrOfBirth" xml:space="preserve">
    <value>Birth year</value>
  </data>
  <data name="chSetCurrent" xml:space="preserve">
    <value>Set the current...</value>
  </data>
  <data name="procAbortH" xml:space="preserve">
    <value>Premature procedure termination</value>
  </data>
  <data name="procAbortQ" xml:space="preserve">
    <value>Do you really want to terminate the procedure prematurely?</value>
  </data>
  <data name="exitNo" xml:space="preserve">
    <value>If the procedure is in progress, you can not close the application.</value>
  </data>
  <data name="restartNo" xml:space="preserve">
    <value>If the procedure is in progress, the device can not be restarted.</value>
  </data>
  <data name="shutdownNo" xml:space="preserve">
    <value>If the procedure is in progress, the device can not be turned off.</value>
  </data>
  <data name="patDuplMsg" xml:space="preserve">
    <value>This patient is already attached to another channel.</value>
  </data>
  <data name="patDuplMsgH" xml:space="preserve">
    <value>Patient already attached</value>
  </data>
  <data name="testChError11" xml:space="preserve">
    <value>Not all channels started: {0}</value>
  </data>
  <data name="testChError12" xml:space="preserve">
    <value>Diode of channel {0} does not light red</value>
  </data>
  <data name="testChError13" xml:space="preserve">
    <value>Diode of channel {0} does not light green</value>
  </data>
  <data name="testChError14" xml:space="preserve">
    <value>Diode of channel {0} does not light blue</value>
  </data>
  <data name="testChError2" xml:space="preserve">
    <value>Insufficient HV voltage on channel {0}</value>
  </data>
  <data name="testChError31" xml:space="preserve">
    <value>Disconnect the headset from the channel {0}</value>
  </data>
  <data name="testChError32" xml:space="preserve">
    <value>Too high impedance on channel {0}</value>
  </data>
  <data name="testChError4" xml:space="preserve">
    <value>The stress at channel load {0} does not match the tolerance ({1}). Attenuation coefficient = {2}</value>
  </data>
  <data name="testChError5" xml:space="preserve">
    <value>Evaluation of current limitation at 10 mA on channel {0}</value>
  </data>
  <data name="testChError6" xml:space="preserve">
    <value>HV voltage drop at maximum of load of channel {0}</value>
  </data>
  <data name="testChError7" xml:space="preserve">
    <value>Evaluation of too high current impedance at 10 mA on channel {0}</value>
  </data>
  <data name="testChErrors" xml:space="preserve">
    <value>Errors during self-test</value>
  </data>
  <data name="chInaccessible" xml:space="preserve">
    <value>Channel inaccessible</value>
  </data>
  <data name="patAddErrFName" xml:space="preserve">
    <value>Patient first name must be entered!</value>
  </data>
  <data name="patAddErrHdr" xml:space="preserve">
    <value>Input error</value>
  </data>
  <data name="patAddErrLName" xml:space="preserve">
    <value>Patient surname must be entered!</value>
  </data>
  <data name="cbPauseResumeText" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="cbPauseText" xml:space="preserve">
    <value>Suspend</value>
  </data>
  <data name="chHighResistance" xml:space="preserve">
    <value>The resistance is too high</value>
  </data>
  <data name="testChError0" xml:space="preserve">
    <value>Communication between computer and device is interrupted, self-test has not occurred.</value>
  </data>
  <data name="chOn" xml:space="preserve">
    <value>Turning channel {0} on</value>
  </data>
  <data name="chStatusErr1" xml:space="preserve">
    <value>Output current is limited for safety reasons.</value>
  </data>
  <data name="chStatusErr2" xml:space="preserve">
    <value>DataFlash memory does not contain valid data.</value>
  </data>
  <data name="chStatusErr3" xml:space="preserve">
    <value>Entry into Holding registers does not contain valid data.</value>
  </data>
  <data name="chStatusErr4" xml:space="preserve">
    <value>A system watchdog was called up.</value>
  </data>
  <data name="chStatusErr5" xml:space="preserve">
    <value>The board was restarted.</value>
  </data>
  <data name="chStatusErrHdr" xml:space="preserve">
    <value>Bad status of channel {0}</value>
  </data>
  <data name="patSelCycle" xml:space="preserve">
    <value>Cycle</value>
  </data>
  <data name="patSelProcNum" xml:space="preserve">
    <value>Procedure number</value>
  </data>
  <data name="noPatient" xml:space="preserve">
    <value>No patients are registered.\nPlease register the patient and then select him/she for the procedure.</value>
  </data>
  <data name="noPatientHdr" xml:space="preserve">
    <value>No patients</value>
  </data>
  <data name="ProcHdrChannel" xml:space="preserve">
    <value>Channel number</value>
  </data>
  <data name="ProcHdrDatum" xml:space="preserve">
    <value>Date of procedure</value>
  </data>
  <data name="ProcHdrDuration" xml:space="preserve">
    <value>Duration of the procedure</value>
  </data>
  <data name="ProcHdrOperator" xml:space="preserve">
    <value>Operator</value>
  </data>
  <data name="ProcHdrPatient" xml:space="preserve">
    <value>Patient</value>
  </data>
  <data name="ProcHdrResult" xml:space="preserve">
    <value>Result of completation</value>
  </data>
  <data name="ProcResultFailed" xml:space="preserve">
    <value>Erroneously</value>
  </data>
  <data name="ProcResultFinished" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="ProcResultInitiated" xml:space="preserve">
    <value>Only launched</value>
  </data>
  <data name="ProcResultPrematurely" xml:space="preserve">
    <value>Prematurely</value>
  </data>
  <data name="filterAll" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="chNum" xml:space="preserve">
    <value>Channel {0}</value>
  </data>
  <data name="chUserProcCompleted" xml:space="preserve">
    <value>Patient '{0}' completed the procedure of {1} in {2}-{3} cycle after {4} minutes and {5} seconds</value>
  </data>
  <data name="testDongleKO" xml:space="preserve">
    <value>Verification of the hardware key was unsuccessful.</value>
  </data>
  <data name="testDongleKOhdr" xml:space="preserve">
    <value>Missing hardware key</value>
  </data>
  <data name="testDongleKOmsg" xml:space="preserve">
    <value>The hardware key was not found on the USB port. The application will be terminated.</value>
  </data>
  <data name="testDongleOK" xml:space="preserve">
    <value>Verification of the hardware key was successful.</value>
  </data>
  <data name="GenericErrorHdr" xml:space="preserve">
    <value>Generic error</value>
  </data>
  <data name="langNo" xml:space="preserve">
    <value>If the procedure is in progress, you can not change the language.</value>
  </data>
  <data name="langQH" xml:space="preserve">
    <value>Change of language</value>
  </data>
  <data name="chSetCurrAborted" xml:space="preserve">
    <value>The current setting has been interrupted. Continue setting in a moment.</value>
  </data>
</root>